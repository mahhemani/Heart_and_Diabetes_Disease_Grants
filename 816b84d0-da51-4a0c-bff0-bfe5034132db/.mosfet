{
  "layout": "panel",
  "rdbmsId": "816b84d0-da51-4a0c-bff0-bfe5034132db",
  "hidden": true,
  "engine": "Heart_and_Diabetes_Disease_Grants",
  "insightName": "Heart and Disease Grants Dashboard - 0",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"Heart_and_Diabetes_Disease_Grants\"}\u003c/encode\u003e\" ) ;AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;CreateFrame ( R ) .as ( [ \u0027FRAME39078\u0027 ] ) ;Database ( Heart_and_Diabetes_Disease_Grants ) | Select ( ALLGRANTS2014CSV , ALLGRANTS2014CSV__Agency , ALLGRANTS2014CSV__Amount , ALLGRANTS2014CSV__Award_Number , ALLGRANTS2014CSV__City_State , ALLGRANTS2014CSV__Grantee_Organization_Name , ALLGRANTS2014CSV__Grantee_Project_Title_Program_Name ) .as ( [ ALLGRANTS2014CSV , Agency , Amount , Award_Number , City_State , Grantee_Organization_Name , Grantee_Project_Title_Program_Name ] ) | Import ( ) ;SplitColumns ( columns \u003d [ \"City_State\" ] , delimiter \u003d [ \",_\" ] , regex \u003d [ \"Regex\" ] ) ;Database ( State_Demographics ) | Select ( State_1 , State_1__Below_Poverty_Line , State_1__Could_Not_See_Doctor_Because_of_Cost , State_1__Diabetes_Prevalence , State_1__Heart_Disease_Prevalence , State_1__Median_Annual_Household_Income , State_1__Per_Capita_State_Spending , State_1__Rate_of_HIV_Diagnoses_per_100_000_ppl , State_1__Region , State_1__Total_Hospitals ) .as ( [ State_1 , Below_Poverty_Line , Could_Not_See_Doctor_Because_of_Cost , Diabetes_Prevalence , Heart_Disease_Prevalence , Median_Annual_Household_Income , Per_Capita_State_Spending , Rate_of_HIV_Diagnoses_per_100_000_ppl , Region , Total_Hospitals ] ) | Merge ( ( City_State_2 , inner.join , State_1 ) ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;if ( ( HasDuplicates ( City_State_2 ) ) , ( Select ( City_State_2 , Average ( Diabetes_Prevalence ) , Average ( Heart_Disease_Prevalence ) , Average ( Amount ) , UniqueGroupConcat ( Region ) ) .as ( [ City_State_2 , AverageofDiabetes_Prevalence , AverageofHeart_Disease_Prevalence , AverageofAmount , UniqueGroupConcatofRegion ] ) | Group ( City_State_2 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"x\" : [ \"AverageofDiabetes_Prevalence\" ] , \"y\" : [ \"AverageofHeart_Disease_Prevalence\" ] , \"z\" : [ \"AverageofAmount\" ] , \"series\" : [ \"UniqueGroupConcatofRegion\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( City_State_2 , Diabetes_Prevalence , Heart_Disease_Prevalence , Amount , Region ) .as ( [ City_State_2 , Diabetes_Prevalence , Heart_Disease_Prevalence , Amount , Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"x\" : [ \"Diabetes_Prevalence\" ] , \"y\" : [ \"Heart_Disease_Prevalence\" ] , \"z\" : [ \"Amount\" ] , \"series\" : [ \"Region\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | Clone ( 1 ) ;if ( ( HasDuplicates ( City_State_2 ) ) , ( Select ( City_State_2 , Average ( Could_Not_See_Doctor_Because_of_Cost ) ) .as ( [ City_State_2 , AverageofCould_Not_See_Doctor_Because_of_Cost ] ) | Group ( City_State_2 ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"AverageofCould_Not_See_Doctor_Because_of_Cost\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( City_State_2 , Could_Not_See_Doctor_Because_of_Cost ) .as ( [ City_State_2 , Could_Not_See_Doctor_Because_of_Cost ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"Could_Not_See_Doctor_Because_of_Cost\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( City_State_2 ) ) , ( Select ( City_State_2 , Average ( Could_Not_See_Doctor_Because_of_Cost ) , Average ( Below_Poverty_Line ) ) .as ( [ City_State_2 , AverageofCould_Not_See_Doctor_Because_of_Cost , AverageofBelow_Poverty_Line ] ) | Group ( City_State_2 ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"AverageofCould_Not_See_Doctor_Because_of_Cost\" , \"AverageofBelow_Poverty_Line\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( City_State_2 , Could_Not_See_Doctor_Because_of_Cost , Below_Poverty_Line ) .as ( [ City_State_2 , Could_Not_See_Doctor_Because_of_Cost , Below_Poverty_Line ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"Could_Not_See_Doctor_Because_of_Cost\" , \"Below_Poverty_Line\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleAverage\" : true } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleAverage\" ) ;Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : true } } } ) ;Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;Panel ( 1 ) | SetPanelSort ( columns \u003d [ \"AverageofBelow_Poverty_Line\" ] , sort \u003d [ \"desc\" ] ) ;Frame ( ) | Select ( City_State_2 , Average ( Could_Not_See_Doctor_Because_of_Cost ) , Average ( Below_Poverty_Line ) ) .as ( [ City_State_2 , AverageofCould_Not_See_Doctor_Because_of_Cost , AverageofBelow_Poverty_Line ] ) | Group ( City_State_2 ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"AverageofCould_Not_See_Doctor_Because_of_Cost\" , \"AverageofBelow_Poverty_Line\" ] } } } ) | Collect ( 500 ) ;Panel ( 1 ) | Clone ( 2 ) ;if ( ( HasDuplicates ( City_State_2 ) ) , ( Select ( City_State_2 , Average ( Median_Annual_Household_Income ) ) .as ( [ City_State_2 , AverageofMedian_Annual_Household_Income ] ) | Group ( City_State_2 ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"AverageofMedian_Annual_Household_Income\" ] } } } ) | Collect ( 500 ) ) , ( Select ( City_State_2 , Median_Annual_Household_Income ) .as ( [ City_State_2 , Median_Annual_Household_Income ] ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"City_State_2\" ] , \"value\" : [ \"Median_Annual_Household_Income\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 2 ) | Clone ( 3 ) ;Panel ( 3 ) | SetPanelView ( \"DashboardFilter\" ) ;Panel ( 3 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Single Select\" , \"viewType\" : \"List\" , \"instance\" : \"City_State_2\" } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;Panel ( 3 ) | SetPanelView ( \"DashboardFilter\" ) ;Panel ( 3 ) | AddPanelOrnaments ( { \"dashboardFilter\" : { \"singleSelect\" : \"Single Select\" , \"viewType\" : \"List\" , \"instance\" : \"City_State_2\" } } ) | RetrievePanelOrnaments ( \"dashboardFilter\" ) ;"
}